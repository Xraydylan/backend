/labelings:
  get:
    tags:
    - "labelings"
    summary: "Returns all labelings"
    description: "Returns a list of all available labelings"
    operationId: "getLabelings"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "successful operation"
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Labeling"
    security:
    - api_key: []
  post:
    tags:
    - "labelings"
    summary: "Add a new labeling"
    description: "Creates a new labeling"
    operationId: "createLabeling"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Labeling object that needs to be created"
      required: true
      schema:
        $ref: "#/definitions/Labeling"
    responses:
      201:
        description: "Created"
      405:
        description: "Invalid input"
    security:
    - api_key: []
  put:
    tags:
    - "labelings"
    summary: "Update existing labelings"
    description: "Updates a bulk of labelings"
    operationId: "updateLabelings"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Labelings that need to be updated"
      required: true
      schema:
        type: "array"
        items:
          $ref: "#/definitions/Labeling"
    responses:
      501:
        description: "Not Implemented"
    security:
    - api_key: []
  delete:
    tags:
    - "labelings"
    summary: "Deletes all labelings"
    description: "Deletes all labelings"
    operationId: "deleteLabelings"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "deleted all labelings"
    security:
    - api_key: []

/labelings/{id}:
  get:
    tags:
    - "labelings"
    summary: "Get a labeling by id"
    description: "Returns a single labeling"
    operationId: "getLabelingById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of labeling to return"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Labeling"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Labeling not found"
    security:
    - api_key: []
  post:
    tags:
    - "labelings"
    summary: "Create a labeling by id"
    description: "Create a single labeling by id"
    operationId: "createLabelingById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of labeling to create"
      required: true
      type: "string"
    responses:
      500:
        description: "Method not allowed"
    security:
    - api_key: []
    deprecated: true
  put:
    tags:
    - "labelings"
    summary: "Update a labeling by id"
    description: "Update a single labeling by id"
    operationId: "updateLabelingById"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of labeling to update"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Labeling"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Labeling not found"
    security:
    - api_key: []
  delete:
    tags:
    - "labelings"
    summary: "Deletes a labelings by id"
    description: "Deletes a specific labelings by id"
    operationId: "deleteLabelingById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of labeling to delete"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
    security:
    - api_key: []
