/datasets:
  get:
    tags:
    - "datasets"
    summary: "Returns all datasets"
    description: "Returns a list of all available datasets"
    operationId: "getDatasets"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "successful operation"
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Dataset"
    security:
    - api_key: []
  post:
    tags:
    - "datasets"
    summary: "Add a new dataset"
    description: "Creates a new dataset"
    operationId: "createDataset"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Dataset object that needs to be created"
      required: true
      schema:
        $ref: "#/definitions/Dataset"
    responses:
      201:
        description: "Created"
      405:
        description: "Invalid input"
    security:
    - api_key: []
  put:
    tags:
    - "datasets"
    summary: "Update existing datasets"
    description: "Updates a bulk of datasets"
    operationId: "updateDatasets"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Datasets that need to be updated"
      required: true
      schema:
        type: "array"
        items:
          $ref: "#/definitions/Dataset"
    responses:
      501:
        description: "Not Implemented"
    security:
    - api_key: []
  delete:
    tags:
    - "datasets"
    summary: "Deletes all datasets"
    description: "Deletes all datasets"
    operationId: "deleteDatasets"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "deleted all datasets"
    security:
    - api_key: []

/datasets/{id}:
  get:
    tags:
    - "datasets"
    summary: "Get a dataset by id"
    description: "Returns a single dataset"
    operationId: "getDatasetById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of dataset to return"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Dataset"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Dataset not found"
    security:
    - api_key: []
  post:
    tags:
    - "datasets"
    summary: "Create a dataset by id"
    description: "Create a single dataset by id"
    operationId: "createDatasetById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of dataset to create"
      required: true
      type: "string"
    responses:
      500:
        description: "Method not allowed"
    security:
    - api_key: []
    deprecated: true
  put:
    tags:
    - "datasets"
    summary: "Update a dataset by id"
    description: "Update a single dataset by id"
    operationId: "updateDatasetById"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of dataset to update"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Dataset"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Dataset not found"
    security:
    - api_key: []
  delete:
    tags:
    - "datasets"
    summary: "Deletes a datasets by id"
    description: "Deletes a specific datasets by id"
    operationId: "deleteDatasetById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of dataset to delete"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
    security:
    - api_key: []
