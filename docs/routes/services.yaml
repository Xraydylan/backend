/services:
  get:
    tags:
    - "services"
    summary: "Returns all services"
    description: "Returns a list of all available services"
    operationId: "getServices"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "successful operation"
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Service"
    security:
    - api_key: []
  post:
    tags:
    - "services"
    summary: "Add a new service"
    description: "Creates a new service"
    operationId: "createService"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Service object that needs to be created"
      required: true
      schema:
        $ref: "#/definitions/Service"
    responses:
      201:
        description: "Created"
      405:
        description: "Invalid input"
    security:
    - api_key: []
  put:
    tags:
    - "services"
    summary: "Update existing services"
    description: "Updates a bulk of services"
    operationId: "updateServices"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Services that need to be updated"
      required: true
      schema:
        type: "array"
        items:
          $ref: "#/definitions/Service"
    responses:
      501:
        description: "Not Implemented"
    security:
    - api_key: []
  delete:
    tags:
    - "services"
    summary: "Deletes all services"
    description: "Deletes all services"
    operationId: "deleteServices"
    produces:
    - "application/json"
    parameters: []
    responses:
      200:
        description: "deleted all services"
    security:
    - api_key: []

/services/{id}:
  get:
    tags:
    - "services"
    summary: "Get a service by id"
    description: "Returns a single service"
    operationId: "getServiceById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of service to return"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Service"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Service not found"
    security:
    - api_key: []
  post:
    tags:
    - "services"
    summary: "Create a service by id"
    description: "Create a single service by id"
    operationId: "createServiceById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of service to create"
      required: true
      type: "string"
    responses:
      500:
        description: "Method not allowed"
    security:
    - api_key: []
    deprecated: true
  put:
    tags:
    - "services"
    summary: "Update a service by id"
    description: "Update a single service by id"
    operationId: "updateServiceById"
    consumes:
    - "application/json"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of service to update"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
        schema:
          $ref: "#/definitions/Service"
      400:
        description: "Invalid ID supplied"
      404:
        description: "Service not found"
    security:
    - api_key: []
  delete:
    tags:
    - "services"
    summary: "Deletes a services by id"
    description: "Deletes a specific services by id"
    operationId: "deleteServiceById"
    produces:
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of service to delete"
      required: true
      type: "string"
    responses:
      200:
        description: "successful operation"
    security:
    - api_key: []
